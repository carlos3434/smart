var vm = new Vue({
  el: '#main',
  data: {
    tarea: {
      codigo: '',
      estado: '',
      cordenadax: '',
      cordenaday: '',
      tipo_tarea: '',
      observacion: ''
    },
    accion: ''
  },

  methods: {
    /**boton de modal Guardar*/
    guardarModulo: function guardarModulo() {
      if (vm.accion == 'nuevo') {
        Modulos.store();
      } else {
        Modulos.update(vm.modulo.id);
      }
    },
    /**boton llama a modal, nuevo rol */
    storeModulo: function storeModulo() {
      $("#moduloModal").modal();
      vm.accion = 'nuevo';
      vm.modulo = {};
    }
  }
});


var datatable;
var tabla = 'tabla_registro_tarea';
var responsiveHelper_datatable_tabletools = undefined;
var breakpointDefinition = {
  tablet: 1024,
  phone: 480
};

var columnDefs = [
  {
    "targets": 0,
    "data": "codigo",
    "name": "codigo",
    "searchable": false
  }, {
    "targets": 1,
    "data": "coordx",
    "name": "coordx",
    "searchable": false
  }, {
    "targets": 2,
    "data": "coordy",
    "name": "coordy",
    "searchable": false
  }, {
    "targets": 3,
    "data": "observacion",
    "name": "observacion"
  }, {
    "targets": 4,
    "data": "tipo",
    "name": "tipo_tarea_id"
  }, {
    "targets": 5,
    "data": "estado",
    "name": "estado_tarea_id"
  }, {
    "targets": 6,
    "name": "editar_tarea",
    "searchable": false,
    "data": function data(row, type, val, meta) {
      return '<td><button type="button" onClick="editar(' + row.id + ')" class="btn btn-primary">Editar</button></td>';
    },
    "defaultContent": ''
  }];

var dataTable = {
  "processing": true,
  "serverSide": true,
  "stateSave": true,
  "searching": true,
  "ordering": true,
  "stateLoadCallback": function stateLoadCallback(settings) {
    $("body").append('<div class="overlay"></div><div class="loading-img"></div>');
  },
  "stateSaveCallback": function stateSaveCallback(settings) {
    // Cuando finaliza el ajax
    $(".overlay,.loading-img").remove();
  },
  "ajax": {
    "url": "api/tareas",
    "type": "GET",
    "data": function data(d) {
      d.per_page = d.length;
      d.page = (d.start + d.length) / d.length;
      d.filter = d.search.value;
    }
  },
  columnDefs: columnDefs,
  "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" + "t" + "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
  "oLanguage": {
    "sSearch": '<span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>'
  },
  "oTableTools": {
    "aButtons": ["copy", "csv", "xls", {
      "sExtends": "pdf",
      "sTitle": "SmartAdmin_PDF",
      "sPdfMessage": "SmartAdmin PDF Export",
      "sPdfSize": "letter"
    }, {
      "sExtends": "print",
      "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
    }],
    "sSwfPath": "js/plugin/datatables/swf/copy_csv_xls_pdf.swf"
  },
  "autoWidth": true,
  "preDrawCallback": function preDrawCallback() {
    if (!responsiveHelper_datatable_tabletools) {
      responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#' + tabla), breakpointDefinition);
    }
  },
  "rowCallback": function rowCallback(nRow, data) {
    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
  },
  "drawCallback": function drawCallback(oSettings) {
    responsiveHelper_datatable_tabletools.respond();
  }
};

$(document).ready(function () {
  pageSetUp();
  datatable = $('#' + tabla).DataTable(dataTable);
});

editar = function editar(id) {
  // vm.accion = 'editar';
  // Roles.get(id);
  $("#modal-tarea").modal();
};

>>>>>>> 6105f759bd381548c46b5301ab09117cb4020cfc
